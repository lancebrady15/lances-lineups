---
title: "Appendix: Blog Post #2"
author: "Lance Brady"
date: "2025-02-25"
categories: [swing profiles, lineups, statcast]
format: html
editor: visual
image: blog1.jpg
execute:
  eval: false
---

## Methods

First, we will read in the data and libraries.

```{r}
library(tidyverse)
library(car)
library(pubtheme)

statcast_data = readRDS("data/statcast_all_years.rds")
```

## Model I: Does having a variety of average swing characteristics across players on the roster help or hurt scoring?

### IA: Does Variation in Swing Length or Swing Speed individually help a Team across a season?

First, let's create a unique ID for each Plate Appearance in `statcast_data`.

For each at-bat, decide if the batter is on the `home_team` (if `inning_topbot` == "Bot") or the `away_team` (if `inning_topbot` == "Top"). This assignment handles trades automatically, because the data for each game has the correct home/away teams for that date. We will also filter to only include 2023 and 2024 data, as we only have swing profile data for those years of analysis.

```{r}
statcast_blog2 <- statcast_data %>%
  mutate(
    PA_id = paste(game_pk, at_bat_number, sep="_"),
    batter_team = ifelse(inning_topbot == "Bot", home_team, away_team)
  ) %>%
  # Only keep 2023 and 2024
  filter(game_year %in% c(2023, 2024))
```

At this point, a single batter can have multiple rows with different batter_team values if they switched teams mid-season. Each row corresponds to a single plate appearance.

Now we define each combination (batter, batter_team) separately, so we only include that playerâ€™s PAs while on that team.

```{r}
# Each (batter, batter_team) combination with total PAs
batter_team_pa_count <- statcast_blog2 %>%
  group_by(batter, batter_team, game_year) %>%
  distinct(PA_id) %>%
  summarise(total_PA_for_that_team = n(), .groups="drop") %>%
  arrange(batter, batter_team)
```

Checking players who switched teams midway through in 2024, like Justin Turner, who had 349 PAs for Toronto along with 190 PAs for Seattle, we can see that the `batter_team_pa_count` is about correct. We get 332 and 189 PAs in our data respectively, likely due to some missing data.

To get mean swing length for a player, we need to use only the rows from the times the batter was on that team. That means merging in batter_team_map so we can group by (batter, batter_team).

```{r}
batter_team_swing_stats <- statcast_blog2 %>%
  # Keep rows where swing_length and bat_speed are not NA
  filter(!is.na(swing_length), !is.na(bat_speed)) %>%
  group_by(batter, batter_team) %>%
  summarise(
    mean_swing_length = mean(swing_length, na.rm=TRUE),
    mean_bat_speed = mean(bat_speed, na.rm=TRUE), # Will need in IB
    sd_swing_length = sd(swing_length, na.rm=TRUE), # Will need later
    sd_bat_speed = sd(bat_speed, na.rm=TRUE), # Will need later
    .groups="drop"
  )
```

