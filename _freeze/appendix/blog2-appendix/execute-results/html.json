{
  "hash": "91abc22523b95eb967ab96f00f569ea2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Appendix: Blog Post #2\"\nauthor: \"Lance Brady\"\ndate: \"2025-02-25\"\ncategories: [swing profiles, lineups, statcast]\nformat: html\neditor: visual\nimage: blog1.jpg\nexecute:\n  eval: false\n---\n\n\n\n## Methods\nFirst, we will read in the data and libraries.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(car)\nlibrary(pubtheme)\n\nstatcast_data = readRDS(\"data/statcast_all_years.rds\")\n```\n:::\n\n\n\n## Model I: Does having a variety of average swing characteristics across players on the roster help or hurt scoring?\n\n### IA: Does Variation in Swing Length or Swing Speed individually help a Team across a season?\nFirst, let's create a unique ID for each Plate Appearance in `statcast_data`.\n\nFor each at-bat, decide if the batter is on the `home_team` (if `inning_topbot` == \"Bot\") or the `away_team` (if `inning_topbot` == \"Top\"). This assignment handles trades automatically, because the data for each game has the correct home/away teams for that date. We will also filter to only include 2023 and 2024 data, as we only have swing profile data for those years of analysis.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstatcast_blog2 <- statcast_data %>%\n  mutate(\n    PA_id = paste(game_pk, at_bat_number, sep=\"_\"),\n    batter_team = ifelse(inning_topbot == \"Bot\", home_team, away_team)\n  ) %>%\n  # Only keep 2023 and 2024\n  filter(game_year %in% c(2023, 2024))\n```\n:::\n\n\n\nAt this point, a single batter can have multiple rows with different batter_team values if they switched teams mid-season. Each row corresponds to a single plate appearance.\n\nNow we define each combination (batter, batter_team) separately, so we only include that playerâ€™s PAs while on that team.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Each (batter, batter_team) combination with total PAs\nbatter_team_pa_count <- statcast_blog2 %>%\n  group_by(batter, batter_team, game_year) %>%\n  distinct(PA_id) %>%\n  summarise(total_PA_for_that_team = n(), .groups=\"drop\") %>%\n  arrange(batter, batter_team)\n```\n:::\n\n\n\nChecking players who switched teams midway through in 2024, like Justin Turner, who had 349 PAs for Toronto along with 190 PAs for Seattle, we can see that the `batter_team_pa_count` is about correct. We get 332 and 189 PAs in our data respectively, likely due to some missing data.\n\nTo get mean swing length for a player, we need to use only the rows from the times the batter was on that team. That means merging in batter_team_map so we can group by (batter, batter_team).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbatter_team_swing_stats <- statcast_blog2 %>%\n  # Keep rows where swing_length and bat_speed are not NA\n  filter(!is.na(swing_length), !is.na(bat_speed)) %>%\n  group_by(batter, batter_team) %>%\n  summarise(\n    mean_swing_length = mean(swing_length, na.rm=TRUE),\n    mean_bat_speed = mean(bat_speed, na.rm=TRUE), # Will need in IB\n    sd_swing_length = sd(swing_length, na.rm=TRUE), # Will need later\n    sd_bat_speed = sd(bat_speed, na.rm=TRUE), # Will need later\n    .groups=\"drop\"\n  )\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}